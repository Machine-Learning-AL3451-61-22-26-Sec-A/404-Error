# Import necessary libraries
import pandas as pd
from sklearn.naive_bayes import GaussianNB
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load data from CSV
data = pd.read_csv('/content/tennis.csv')
print("The first 5 values of data are:\n", data.head())

# Obtain train data and train output
X = data.iloc[:, :-1]
print("\nThe first 5 values of train data are:\n", X.head())

y = data.iloc[:, -1]
print("\nThe first 5 values of train output are:\n", y.head())

# Convert them to numbers
le_outlook = LabelEncoder()
X['outlook'] = le_outlook.fit_transform(X['outlook'])

le_Temperature = LabelEncoder()
X['temp'] = le_Temperature.fit_transform(X['temp'])

le_Humidity = LabelEncoder()
X['humidity'] = le_Humidity.fit_transform(X['humidity'])

le_Windy = LabelEncoder()
X['windy'] = le_Windy.fit_transform(X['windy'])

print("\nNow the train data is:\n", X.head())

# One-hot encode categorical features
X = pd.get_dummies(X)

print("\nNow the train data with one-hot encoding is:\n", X.head())

# Encode the target variable
le_PlayTennis = LabelEncoder()
y = le_PlayTennis.fit_transform(y)
print("\nNow the train output is:\n", y)

# Split data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20)

# Train Gaussian Naive Bayes classifier
classifier = GaussianNB()
classifier.fit(X_train, y_train)

# Predict and calculate accuracy
y_pred = classifier.predict(X_test)
print("Accuracy is:", accuracy_score(y_pred, y_test))
